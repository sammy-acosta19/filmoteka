{"mappings":"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","sources":["<anon>","src/index.js","src/atributosMovies.js"],"sourcesContent":["async function $33a00c252ad87ae2$var$atributosMovies(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer) {\n    const movieContainer = document.createElement(\"div\");\n    movieContainer.id = `movie-${movie.id}`;\n    movieContainer.classList.add(\"movie\");\n    movieContainer.style.width = \"430px\";\n    movieContainer.style.height = \"305px\";\n    movieContainer.style.marginBottom = \"425px\";\n    movieContainer.style.marginTop = \"20px\";\n    movieContainer.style.marginLeft = \"50px\";\n    movieContainer.style.transition = \"transform 0.3s ease-in-out\";\n    movieContainer.addEventListener(\"mouseenter\", ()=>{\n        movieContainer.style.transform = \"scale(0.9)\";\n    });\n    movieContainer.addEventListener(\"mouseleave\", ()=>{\n        movieContainer.style.transform = \"scale(1)\";\n    });\n    const image = document.createElement(\"img\");\n    image.src = IMAGE_BASE_URL + movie.poster_path;\n    image.alt = movie.title;\n    image.style.borderRadius = \"5px\";\n    const title = document.createElement(\"h2\");\n    title.textContent = movie.title;\n    title.style.color = \"black\";\n    title.style.fontFamily = \"Roboto\";\n    title.style.fontWeight = \"500\";\n    title.style.fontSize = \"15px\";\n    const divcontainerPreInfo = document.createElement(\"div\");\n    divcontainerPreInfo.style.display = \"flex\";\n    const genre = document.createElement(\"p\");\n    const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n    const genresData = await genresResponse.json();\n    const genreNames = genresData.genres.map((genre)=>genre.name).join(\", \");\n    genre.textContent = `${genreNames}     |`;\n    genre.style.color = \"rgba(255, 107, 1, 1)\";\n    genre.style.fontFamily = \"Roboto\";\n    genre.style.fontWeight = \"500\";\n    genre.style.fontSize = \"15px\";\n    const releaseYear = document.createElement(\"p\");\n    const releaseDate = new Date(movie.release_date);\n    releaseYear.textContent = `${releaseDate.getFullYear()}`;\n    releaseYear.style.color = \"rgba(255, 107, 1, 1)\";\n    releaseYear.style.fontFamily = \"Roboto\";\n    releaseYear.style.fontWeight = \"500\";\n    releaseYear.style.fontSize = \"15px\";\n    releaseYear.style.marginLeft = \"5px\";\n    releaseYear.style.marginRight = \"5px\";\n    const containerRatingOrange = document.createElement(\"div\");\n    containerRatingOrange.style.backgroundColor = \"rgba(255, 107, 1, 1)\";\n    containerRatingOrange.style.width = \"36px\";\n    containerRatingOrange.style.height = \"16px\";\n    containerRatingOrange.style.borderRadius = \"5px\";\n    const rating = document.createElement(\"p\");\n    rating.textContent = `${movie.vote_average}`;\n    rating.style.color = \"white\";\n    rating.style.fontFamily = \"Roboto\";\n    rating.style.fontWeight = \"500\";\n    rating.style.fontSize = \"13px\";\n    rating.style.textAlign = \"center\";\n    movieContainer.appendChild(image);\n    movieContainer.appendChild(title);\n    movieContainer.appendChild(divcontainerPreInfo);\n    divcontainerPreInfo.appendChild(genre);\n    divcontainerPreInfo.appendChild(releaseYear);\n    divcontainerPreInfo.appendChild(containerRatingOrange);\n    containerRatingOrange.appendChild(rating);\n    const btnAbrirModal = movieContainer;\n    const btnCerrarModal = document.getElementById(\"btn-close-modal\");\n    const modal = document.querySelector(\"#modal\");\n    btnAbrirModal.addEventListener(\"click\", ()=>{\n        modal.showModal();\n        const agregarHtmlModal = document.getElementById(\"add-movies-modal\");\n        const movieId = movie.id;\n        const movieDetailsUrl = `${API_URL}/movie/${movieId}?api_key=${API_KEY}`;\n        fetch(movieDetailsUrl).then((response)=>response.json()).then((data)=>{\n            const contenedorAddModal1 = document.querySelector(\".contenedor-add-modal-1\");\n            contenedorAddModal1.innerHTML = \"\";\n            const titleModal = document.querySelector(\".title-description-movies\");\n            titleModal.textContent = data.title;\n            const imagePathModal = document.createElement(\"img\");\n            imagePathModal.src = IMAGE_BASE_URL + data.poster_path;\n            imagePathModal.alt = data.title;\n            contenedorAddModal1.appendChild(imagePathModal);\n            const addPreInfoValor = document.querySelector(\".container-preInfo-valor\");\n            addPreInfoValor.innerHTML = `\n            <p class=\"preinfo-valor\"> <span class=\"date-average\">${data.vote_average}</span> / ${data.vote_count}</p>\n            <p class=\"preinfo-valor\">${data.popularity}</p>\n            <p class=\"preinfo-valor\">${data.original_title}</p>\n            <p class=\"preinfo-valor\">${data.genres.map((genre)=>genre.name).join(\", \")}</p>`;\n            const descriptionModal = document.querySelector(\".description\");\n            descriptionModal.textContent = data.overview;\n        });\n    });\n    btnCerrarModal.addEventListener(\"click\", ()=>{\n        modal.close();\n    });\n    movieListContainer.appendChild(movieContainer);\n}\nvar $33a00c252ad87ae2$export$2e2bcd8739ae039 = $33a00c252ad87ae2$var$atributosMovies;\n\n\ndocument.addEventListener(\"DOMContentLoaded\", ()=>{\n    const API_KEY = \"d62e671e72a3270f6005a951e144404c\";\n    const API_URL = \"https://api.themoviedb.org/3\";\n    const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\n    const movieListContainer = document.getElementById(\"movie-list\");\n    const paginationNumbers = document.getElementById(\"pagination-numbers\");\n    const prevButton = document.getElementById(\"prev-button\");\n    const nextButton = document.getElementById(\"next-button\");\n    let currentPage = 1;\n    const moviesPerPage = 9;\n    let totalMovies = 0;\n    let totalPages = 0;\n    let selectedMovies = JSON.parse(localStorage.getItem(\"selectedMovies\")) || [];\n    // Array para la cola\n    let selectedQueueMovies = JSON.parse(localStorage.getItem(\"selectedQueueMovies\")) || [];\n    async function fetchPopularMovies(page) {\n        try {\n            const response = await fetch(`${API_URL}/movie/popular?api_key=${API_KEY}&page=${page}`);\n            const data = await response.json();\n            movieListContainer.innerHTML = \"\";\n            if (page === 1) {\n                totalMovies = data.total_results;\n                totalPages = Math.ceil(totalMovies / moviesPerPage);\n            }\n            const startIndex = (page - 1) * moviesPerPage;\n            const endIndex = startIndex + moviesPerPage;\n            data.results.slice(startIndex, endIndex).forEach(async (movie)=>{\n                await (0, $33a00c252ad87ae2$export$2e2bcd8739ae039)(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer);\n                const btnAddWatched = document.getElementById(\"addToWatched\");\n                const btnAddQueue = document.getElementById(\"addToQueue\");\n                btnAddWatched.addEventListener(\"click\", async ()=>{\n                    try {\n                        const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n                        const genresData = await genresResponse.json();\n                        const genreNames = genresData.genres.map((genre)=>genre.name).join(\", \");\n                        const selectedMovie = {\n                            title: movie.title,\n                            poster_path: IMAGE_BASE_URL + movie.poster_path,\n                            genres: genreNames,\n                            rating: movie.vote_average || \"No disponible\"\n                        };\n                        selectedMovies.push(selectedMovie);\n                        console.log(\"Pel\\xedcula seleccionada:\", selectedMovie);\n                        console.log(\"Pel\\xedculas seleccionadas:\", selectedMovies);\n                        localStorage.setItem(\"selectedMovies\", JSON.stringify(selectedMovies));\n                    } catch (error) {\n                        console.log(\"Error al obtener g\\xe9neros:\", error);\n                    }\n                });\n                btnAddQueue.addEventListener(\"click\", async ()=>{\n                    try {\n                        const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n                        const genresData = await genresResponse.json();\n                        const genreNames = genresData.genres.map((genre)=>genre.name).join(\", \");\n                        const selectedQueueMovie = {\n                            title: movie.title,\n                            poster_path: IMAGE_BASE_URL + movie.poster_path,\n                            genres: genreNames,\n                            rating: movie.vote_average\n                        };\n                        const existingQueueMovies = JSON.parse(localStorage.getItem(\"selectedQueueMovies\")) || [];\n                        existingQueueMovies.push(selectedQueueMovie);\n                        console.log(\"Pel\\xedcula seleccionada:\", selectedQueueMovie);\n                        console.log(\"Pel\\xedculas seleccionadas:\", existingQueueMovies);\n                        localStorage.setItem(\"selectedQueueMovies\", JSON.stringify(existingQueueMovies));\n                    } catch (error) {\n                        console.log(\"Error al obtener g\\xe9neros:\", error);\n                    }\n                });\n            });\n            // Actualizar la paginación\n            paginationNumbers.innerHTML = \"\";\n            const maxPages = Math.min(totalPages, 5);\n            for(let i = 1; i <= maxPages; i++){\n                const button = document.createElement(\"button\");\n                button.classList.add(\"pagination-number\");\n                button.textContent = i;\n                if (i === currentPage) button.classList.add(\"active\");\n                button.addEventListener(\"click\", ()=>{\n                    currentPage = i;\n                    fetchPopularMovies(currentPage);\n                });\n                paginationNumbers.appendChild(button);\n            }\n            if (totalPages > 20) {\n                const dots = document.createElement(\"span\");\n                dots.textContent = \"...\";\n                paginationNumbers.appendChild(dots);\n            }\n            prevButton.disabled = currentPage === 1;\n            nextButton.disabled = currentPage === totalPages;\n        } catch (error) {\n            console.error(\"Error al obtener pel\\xedculas populares:\", error);\n        }\n    }\n    prevButton.addEventListener(\"click\", ()=>{\n        if (currentPage > 1) {\n            currentPage--;\n            fetchPopularMovies(currentPage);\n        }\n    });\n    nextButton.addEventListener(\"click\", ()=>{\n        if (currentPage < totalPages) {\n            currentPage++;\n            fetchPopularMovies(currentPage);\n        }\n    });\n    fetchPopularMovies(currentPage);\n});\nconst $1f0dc3b9307be026$var$btnMyLibrary = document.querySelector(\".my-library-btn\");\nconst $1f0dc3b9307be026$var$containerLibrarySearch = document.querySelector(\".search-container\");\n$1f0dc3b9307be026$var$btnMyLibrary.addEventListener(\"click\", (event)=>{\n    event.preventDefault();\n    $1f0dc3b9307be026$var$containerLibrarySearch.innerHTML = \"\";\n    const watchedBtn = document.createElement(\"button\");\n    const queueBtn = document.createElement(\"button\");\n    watchedBtn.textContent = \"WATCHED\";\n    queueBtn.textContent = \"QUEUE\";\n    watchedBtn.classList.add(\"library-container__button--active\");\n    queueBtn.classList.add(\"library-container__button--transparent\");\n    $1f0dc3b9307be026$var$containerLibrarySearch.classList.add(\"library-container__button\");\n    $1f0dc3b9307be026$var$containerLibrarySearch.append(watchedBtn, queueBtn);\n});\n// BUSQUEDA DE PELÍCULAS POR NOMBRE\nconst $1f0dc3b9307be026$var$searchInputBusqueda = document.getElementById(\"search-input\");\nconst $1f0dc3b9307be026$var$searchButton = document.getElementById(\"search-button\");\n$1f0dc3b9307be026$var$searchButton.addEventListener(\"click\", (e)=>{\n    if ($1f0dc3b9307be026$var$searchInputBusqueda.value === \"\") e.preventDefault();\n    else {\n        const searchTerm = $1f0dc3b9307be026$var$searchInputBusqueda.value;\n        $1f0dc3b9307be026$var$searchMoviesByTitle(searchTerm);\n    }\n});\nasync function $1f0dc3b9307be026$var$searchMoviesByTitle(searchTerm) {\n    const API_KEY = \"d62e671e72a3270f6005a951e144404c\";\n    const API_URL = \"https://api.themoviedb.org/3\";\n    const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\n    const movieListContainer = document.getElementById(\"movie-list\");\n    try {\n        const response = await fetch(`${API_URL}/search/movie?api_key=${API_KEY}&query=${searchTerm}&include_adult=false&language=en-US`);\n        const data = await response.json();\n        movieListContainer.innerHTML = \"\";\n        data.results.forEach(async (movie)=>{\n            await (0, $33a00c252ad87ae2$export$2e2bcd8739ae039)(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer);\n        });\n    } catch (error) {\n        console.error(\"Error al buscar pel\\xedculas por t\\xedtulo:\", error);\n    }\n}\n\n\n//# sourceMappingURL=index.1c6ea1b1.js.map\n","import atributosMovies from \"./atributosMovies\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const API_KEY = \"d62e671e72a3270f6005a951e144404c\";\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\n\n  const movieListContainer = document.getElementById(\"movie-list\");\n  const paginationNumbers = document.getElementById(\"pagination-numbers\");\n  const prevButton = document.getElementById(\"prev-button\");\n  const nextButton = document.getElementById(\"next-button\");\n\n  let currentPage = 1;\n  const moviesPerPage = 9;\n  let totalMovies = 0;\n  let totalPages = 0;\n\n  let selectedMovies = JSON.parse(localStorage.getItem(\"selectedMovies\")) || [];\n  // Array para la cola\n  let selectedQueueMovies = JSON.parse(localStorage.getItem(\"selectedQueueMovies\")) || [];\n\n  async function fetchPopularMovies(page) {\n    try {\n      const response = await fetch(`${API_URL}/movie/popular?api_key=${API_KEY}&page=${page}`);\n      const data = await response.json();\n      movieListContainer.innerHTML = \"\";\n\n      if (page === 1) {\n        totalMovies = data.total_results;\n        totalPages = Math.ceil(totalMovies / moviesPerPage);\n      }\n\n      const startIndex = (page - 1) * moviesPerPage;\n      const endIndex = startIndex + moviesPerPage;\n\n      data.results.slice(startIndex, endIndex).forEach(async (movie) => {\n        await atributosMovies(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer);\n\n        const btnAddWatched = document.getElementById(\"addToWatched\");\n        const btnAddQueue = document.getElementById(\"addToQueue\");\n        \n        btnAddWatched.addEventListener(\"click\", async () => {\n          try {\n            const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n            const genresData = await genresResponse.json();\n            const genreNames = genresData.genres.map((genre) => genre.name).join(\", \");\n            const selectedMovie = {\n              title: movie.title,\n              poster_path: IMAGE_BASE_URL + movie.poster_path,\n              genres: genreNames,\n              rating: movie.vote_average || \"No disponible\",\n            };\n            selectedMovies.push(selectedMovie);\n            console.log(\"Película seleccionada:\", selectedMovie);\n            console.log(\"Películas seleccionadas:\", selectedMovies);\n            localStorage.setItem(\"selectedMovies\", JSON.stringify(selectedMovies));\n          } catch (error) {\n            console.log(\"Error al obtener géneros:\", error);\n          }\n        });\n\n        btnAddQueue.addEventListener(\"click\", async () => {\n          try {\n            const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n            const genresData = await genresResponse.json();\n            const genreNames = genresData.genres.map((genre) => genre.name).join(\", \");\n            const selectedQueueMovie = {\n              title: movie.title,\n              poster_path: IMAGE_BASE_URL + movie.poster_path,\n              genres: genreNames,\n              rating: movie.vote_average,\n            };\n            const existingQueueMovies = JSON.parse(localStorage.getItem(\"selectedQueueMovies\")) || [];\n            existingQueueMovies.push(selectedQueueMovie);\n            console.log(\"Película seleccionada:\", selectedQueueMovie);\n            console.log(\"Películas seleccionadas:\", existingQueueMovies);\n            localStorage.setItem(\"selectedQueueMovies\", JSON.stringify(existingQueueMovies));\n          } catch (error) {\n            console.log(\"Error al obtener géneros:\", error);\n          }\n        });\n      });\n\n      // Actualizar la paginación\n      paginationNumbers.innerHTML = \"\";\n      const maxPages = Math.min(totalPages, 5);\n\n      for (let i = 1; i <= maxPages; i++) {\n        const button = document.createElement(\"button\");\n        button.classList.add(\"pagination-number\");\n        button.textContent = i;\n        if (i === currentPage) {\n          button.classList.add(\"active\");\n        }\n        button.addEventListener(\"click\", () => {\n          currentPage = i;\n          fetchPopularMovies(currentPage);\n        });\n        paginationNumbers.appendChild(button);\n      }\n\n      if (totalPages > 20) {\n        const dots = document.createElement(\"span\");\n        dots.textContent = \"...\";\n        paginationNumbers.appendChild(dots);\n      }\n\n      prevButton.disabled = currentPage === 1;\n      nextButton.disabled = currentPage === totalPages;\n\n    } catch (error) {\n      console.error(\"Error al obtener películas populares:\", error);\n    }\n  }\n\n  prevButton.addEventListener(\"click\", () => {\n    if (currentPage > 1) {\n      currentPage--;\n      fetchPopularMovies(currentPage);\n    }\n  });\n\n  nextButton.addEventListener(\"click\", () => {\n    if (currentPage < totalPages) {\n      currentPage++;\n      fetchPopularMovies(currentPage);\n    }\n  });\n\n  fetchPopularMovies(currentPage);\n});\n\nconst btnMyLibrary = document.querySelector('.my-library-btn');\nconst containerLibrarySearch = document.querySelector('.search-container');\n\nbtnMyLibrary.addEventListener('click', event => {\n  event.preventDefault();\n  containerLibrarySearch.innerHTML = '';\n  const watchedBtn = document.createElement('button');\n  const queueBtn = document.createElement('button');\n  watchedBtn.textContent = 'WATCHED';\n  queueBtn.textContent = 'QUEUE';\n  watchedBtn.classList.add(\"library-container__button--active\");\n  queueBtn.classList.add('library-container__button--transparent');\n  containerLibrarySearch.classList.add('library-container__button');\n  containerLibrarySearch.append(watchedBtn, queueBtn);\n});\n\n// BUSQUEDA DE PELÍCULAS POR NOMBRE\n\nconst searchInputBusqueda = document.getElementById(\"search-input\");\nconst searchButton = document.getElementById(\"search-button\");\n\nsearchButton.addEventListener(\"click\", (e) => {\n  if (searchInputBusqueda.value === \"\") {\n    e.preventDefault();\n  } else {\n    const searchTerm = searchInputBusqueda.value;\n    searchMoviesByTitle(searchTerm);\n  }\n});\n\nasync function searchMoviesByTitle(searchTerm) {\n  const API_KEY = \"d62e671e72a3270f6005a951e144404c\";\n  const API_URL = \"https://api.themoviedb.org/3\";\n  const IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/w500\";\n  const movieListContainer = document.getElementById(\"movie-list\");\n\n  try {\n    const response = await fetch(\n      `${API_URL}/search/movie?api_key=${API_KEY}&query=${searchTerm}&include_adult=false&language=en-US`\n    );\n    const data = await response.json();\n    movieListContainer.innerHTML = \"\";\n\n    data.results.forEach(async (movie) => {\n      await atributosMovies(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer);\n    });\n  } catch (error) {\n    console.error(\"Error al buscar películas por título:\", error);\n  }\n};\n","async function atributosMovies(movie, API_URL, API_KEY, IMAGE_BASE_URL, movieListContainer) {\n    const movieContainer = document.createElement(\"div\");\n    movieContainer.id = `movie-${movie.id}`;\n    movieContainer.classList.add(\"movie\");\n    movieContainer.style.width = \"430px\";\n    movieContainer.style.height = \"305px\";\n    movieContainer.style.marginBottom = \"425px\";\n    movieContainer.style.marginTop = \"20px\";\n    movieContainer.style.marginLeft = \"50px\";\n    movieContainer.style.transition = \"transform 0.3s ease-in-out\";\n    movieContainer.addEventListener(\"mouseenter\", () => {\n      movieContainer.style.transform = \"scale(0.9)\";\n    });\n    \n    movieContainer.addEventListener(\"mouseleave\", () => {\n      movieContainer.style.transform = \"scale(1)\";\n    });\n    const image = document.createElement(\"img\");\n    image.src = IMAGE_BASE_URL + movie.poster_path;\n    image.alt = movie.title;\n    image.style.borderRadius = \"5px\";\n\n    const title = document.createElement(\"h2\");\n    title.textContent = movie.title;\n    title.style.color = \"black\";\n    title.style.fontFamily = \"Roboto\";\n    title.style.fontWeight = \"500\";\n    title.style.fontSize = \"15px\";\n\n    const divcontainerPreInfo = document.createElement(\"div\");\n    divcontainerPreInfo.style.display = \"flex\";\n\n    const genre = document.createElement(\"p\");\n    const genresResponse = await fetch(`${API_URL}/movie/${movie.id}?api_key=${API_KEY}`);\n    const genresData = await genresResponse.json();\n    const genreNames = genresData.genres.map((genre) => genre.name).join(\", \");\n    genre.textContent = `${genreNames}     |`;\n    genre.style.color = \"rgba(255, 107, 1, 1)\";\n    genre.style.fontFamily = \"Roboto\";\n    genre.style.fontWeight = \"500\";\n    genre.style.fontSize = \"15px\";\n\n    const releaseYear = document.createElement(\"p\");\n    const releaseDate = new Date(movie.release_date);\n    releaseYear.textContent = `${releaseDate.getFullYear()}`;\n    releaseYear.style.color = \"rgba(255, 107, 1, 1)\";\n    releaseYear.style.fontFamily = \"Roboto\";\n    releaseYear.style.fontWeight = \"500\";\n    releaseYear.style.fontSize = \"15px\";\n    releaseYear.style.marginLeft = \"5px\";\n    releaseYear.style.marginRight = \"5px\";\n\n    const containerRatingOrange = document.createElement(\"div\");\n    containerRatingOrange.style.backgroundColor = \"rgba(255, 107, 1, 1)\";\n    containerRatingOrange.style.width = \"36px\";\n    containerRatingOrange.style.height = \"16px\";\n    containerRatingOrange.style.borderRadius = \"5px\";\n\n    const rating = document.createElement(\"p\");\n    rating.textContent = `${movie.vote_average}`;\n    rating.style.color = \"white\";\n    rating.style.fontFamily = \"Roboto\";\n    rating.style.fontWeight = \"500\";\n    rating.style.fontSize = \"13px\";\n    rating.style.textAlign = \"center\";\n\n    movieContainer.appendChild(image);\n    movieContainer.appendChild(title);\n    movieContainer.appendChild(divcontainerPreInfo);\n    divcontainerPreInfo.appendChild(genre);\n    divcontainerPreInfo.appendChild(releaseYear);\n    divcontainerPreInfo.appendChild(containerRatingOrange);\n    containerRatingOrange.appendChild(rating);\n\n    const btnAbrirModal = movieContainer;\n    const btnCerrarModal = document.getElementById(\"btn-close-modal\");\n    const modal = document.querySelector('#modal');\n\n    btnAbrirModal.addEventListener('click', () => {\n      modal.showModal()\n      const agregarHtmlModal = document.getElementById(\"add-movies-modal\");\n      const movieId = movie.id;\n      const movieDetailsUrl = `${API_URL}/movie/${movieId}?api_key=${API_KEY}`;\n\n      fetch(movieDetailsUrl)\n        .then(response => response.json())\n        .then(data => {\n          const contenedorAddModal1 = document.querySelector(\".contenedor-add-modal-1\");\n          contenedorAddModal1.innerHTML = '';\n\n          const titleModal = document.querySelector(\".title-description-movies\");\n          titleModal.textContent = data.title;\n\n          const imagePathModal = document.createElement(\"img\");\n          imagePathModal.src = IMAGE_BASE_URL + data.poster_path;\n          imagePathModal.alt = data.title;\n          contenedorAddModal1.appendChild(imagePathModal);\n\n          const addPreInfoValor = document.querySelector(\".container-preInfo-valor\");\n          addPreInfoValor.innerHTML = `\n            <p class=\"preinfo-valor\"> <span class=\"date-average\">${data.vote_average}</span> / ${data.vote_count}</p>\n            <p class=\"preinfo-valor\">${data.popularity}</p>\n            <p class=\"preinfo-valor\">${data.original_title}</p>\n            <p class=\"preinfo-valor\">${data.genres.map(genre => genre.name).join(\", \")}</p>`;\n\n          const descriptionModal = document.querySelector(\".description\");\n          descriptionModal.textContent = data.overview;\n        });\n    });\n\n    btnCerrarModal.addEventListener('click', () => {\n      modal.close();\n    });\n\n    movieListContainer.appendChild(movieContainer);\n}\n\nexport default atributosMovies;"],"names":["$33a00c252ad87ae2$var$atributosMovies","movie","API_URL","API_KEY","IMAGE_BASE_URL","movieListContainer","movieContainer","document","createElement","id","classList","add","style","width","height","marginBottom","marginTop","marginLeft","transition","addEventListener","transform","image","src","poster_path","alt","title","borderRadius","textContent","color","fontFamily","fontWeight","fontSize","divcontainerPreInfo","display","genre","genresResponse","fetch","genresData","json","genreNames","genres","map","name","join","releaseYear","releaseDate","Date","release_date","getFullYear","marginRight","containerRatingOrange","backgroundColor","rating","vote_average","textAlign","appendChild","btnCerrarModal","getElementById","modal","querySelector","btnAbrirModal","showModal","movieId","movieDetailsUrl","then","response","data","contenedorAddModal1","innerHTML","titleModal","imagePathModal","addPreInfoValor","vote_count","popularity","original_title","descriptionModal","overview","close","paginationNumbers","prevButton","nextButton","currentPage","totalMovies","totalPages","selectedMovies","JSON","parse","localStorage","getItem","fetchPopularMovies","page","total_results","Math","ceil","startIndex","results","slice","forEach","btnAddWatched","btnAddQueue","selectedMovie","push","console","log","setItem","stringify","error","selectedQueueMovie","existingQueueMovies","maxPages","min","i","button","dots","disabled","$1f0dc3b9307be026$var$btnMyLibrary","$1f0dc3b9307be026$var$containerLibrarySearch","event","preventDefault","watchedBtn","queueBtn","append","$1f0dc3b9307be026$var$searchInputBusqueda","$1f0dc3b9307be026$var$searchButton","$1f0dc3b9307be026$var$searchMoviesByTitle","searchTerm","e","value"],"version":3,"file":"index.1c6ea1b1.js.map"}